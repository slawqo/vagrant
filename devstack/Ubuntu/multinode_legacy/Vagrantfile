# -*- mode: ruby -*-
# vi: set ft=ruby :

COMPUTE_NODES = 2

CONTROLLER_MEMORY = 8192
CONTROLLER_CPUS = 2
COMPUTE_MEMORY = 8192
COMPUTE_CPUS = 2
CONTROLLER_IP = "10.120.0.100"
COMPUTE_IP = "10.120.0"


# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.define "controller" do |ain|
      ain.vm.box = "generic/ubuntu2004"
      ain.vm.hostname = "devstack-ubuntu-controller"
      ain.ssh.forward_agent = true

      ain.vm.define "devstack-ubuntu-controller" do |devstack|
        end

      ain.vm.synced_folder ".", "/vagrant", disabled: true

      # Private (host-only) network
      ain.vm.network "private_network", ip: CONTROLLER_IP

      # Libvirt specific configuration
      ain.vm.provider "libvirt" do |libvirt|
        libvirt.memory = CONTROLLER_MEMORY
        libvirt.cpus = CONTROLLER_CPUS
        libvirt.nested = true
        libvirt.machine_virtual_size = 50
        libvirt.random_hostname = true
        libvirt.qemu_use_session = false
      end

      # VirtualBox specific configuration
      ain.vm.provider "virtualbox" do |vb|
          vb.name = "devstack-ubuntu-controller"
          vb.memory = CONTROLLER_MEMORY
          vb.cpus = CONTROLLER_CPUS
      end

      # Preprovisioning with shell script
      # It's necessary because Fedora 27 don't have python2 installed by default
      # and it's required by ansible
      ain.vm.provision "shell", inline: "sudo apt-get update; sudo apt-get -y install python3-minimal"

      # Provisioning with a ansible.
      ain.vm.provision "ansible" do |ansible|
          ansible.playbook = "../../../openstack_provisioning/openstack.yml"
          ansible.vault_password_file = "/tmp/vault_pass"
          ansible.extra_vars = {
              "devstack_datafile" => "/tmp/devstack_data",
              "iface"             => "eth1",
              "vm_type"           => "devstack",
              "l2_agent"          => "openvswitch",
              "l3_mode"           => "legacy",
              "topology"          => "multinode",
          }
      end
  end

  (1..COMPUTE_NODES).each do |i|
    config.vm.define "compute-#{i}" do |compute|
        compute.vm.box = "generic/ubuntu2004"
        compute.vm.hostname = "devstack-ubuntu-compute-#{i}"
        compute.ssh.forward_agent = true

        compute.vm.define "devstack-ubuntu-compute-#{i}" do |devstack|
          end

        compute.vm.synced_folder ".", "/vagrant", disabled: true

        # Private (host-only) network
        compute.vm.network "private_network", ip: "#{COMPUTE_IP}.10#{i}"

        # Libvirt specific configuration
        compute.vm.provider "libvirt" do |libvirt|
          libvirt.memory = COMPUTE_MEMORY
          libvirt.cpus = COMPUTE_CPUS
          libvirt.nested = true
          libvirt.machine_virtual_size = 100
          libvirt.random_hostname = true
          libvirt.qemu_use_session = false
        end

        # VirtualBox specific configuration
        compute.vm.provider "virtualbox" do |vb|
            vb.name = "devstack-ubuntu-compute-#{i}"
            vb.memory = COMPUTE_MEMORY
            vb.cpus = COMPUTE_CPUS
        end

        # Preprovisioning with shell script
        # It's necessary because Fedora 27 don't have python2 installed by default
        # and it's required by ansible
        compute.vm.provision "shell", inline: "sudo apt-get update; sudo apt-get -y install python3-minimal"

        # Provisioning with a ansible.
        compute.vm.provision "ansible" do |ansible|
            ansible.playbook = "../../../openstack_provisioning/openstack.yml"
            ansible.vault_password_file = "/tmp/vault_pass"
            ansible.extra_vars = {
                "devstack_datafile" => "/tmp/devstack_data",
                "iface"             => "eth1",
                "vm_type"           => "devstack",
                "l2_agent"          => "openvswitch",
                "topology"          => "multinode",
                "l3_mode"           => "legacy",
                "service_host"      => CONTROLLER_IP
            }
        end
    end
  end
end
